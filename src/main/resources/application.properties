# devtools
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# MySQL ??
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DB Source URL
spring.datasource.url=jdbc:mysql://localhost:3306/belog
# DB username
spring.datasource.username=root
# DB user-password
spring.datasource.password=1234

spring.jpa.databasePlatform=org.hibernate.dialect.MySQL5InnoDBDialect
# 영속성 컨텍스트의 생존 범위를 트랜잭션 범위로 한정
# 실시간 트래픽이 중요한 API 애플리케이션에는 false로 유지
spring.jpa.openInView=false
# JPA 처리 시에 발생하는 SQL을 보여줄 것인지 결정합니다.
spring.jpa.show-sql= true
# hibernate 사용 설정
# 애플리케이션 실행 시점에 테이블을 다 지우고, 내가 가진 entity 정보를 보고 다시 테이블 자동 생성
# if exists drop table 해주고 다시 만들어준다고 보면 된다.
spring.jpa.hibernate.ddlAuto= update

# 실제 JPA의 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력합니다.
# 실행되는 SQL의 가독성을 높여 줍니다.
spring.jpa.properties.hibernate.format_sql= true
spring.jpa.properties.hibernate.default_batch_fetch_size= 500 # 일대다 컬렉션 조회 시 성능 최적화

logging.level.org.hibernate.type= trace # 콘솔창에 조건에 바인딩되는 결과값 출력
